/////////////////////////////////////////
// LOGO

.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

/////////////////////////////////////////
// SEARCH
.search {
    flex: 0 0 40%;

    display: flex;
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $bp-smallest) {
        order: 1; //since default value for order is 0
        flex: 0 0 100%;
        background-color: var(--color-grey-light-2);
    }


    &__input {
        font-family: inherit; //input fields dont inherit properties of parent directly so we need to specify inherit so  that they inherit the properties
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        display: flex;
        align-items: center;
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3); //this is how we set color for svg icons, using the fill property
    }
}





/////////////////////////////////////////
// USER NAVIGATION

.user-nav {
    align-self: stretch;

    display: flex;
    align-items: center;

    & > * { //selects all the children of the .user-nav class/element
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }
    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: white;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;
        
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }

}


/////////////////////////////////////////
// SIDE NAVIGATION

.side-nav {
    
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: flex;
        margin: 0;
        // justify-content: space-evenly;
    }

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;

            @media only screen and (max-width: $bp-medium) {
                margin-bottom: 0;
            }
        }

        @media only screen and (max-width: $bp-medium) {
            flex: 1;
        }

        &::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 3px;
            background-color: var(--color-primary);
            transform: scaleY(0); //this property makes the before element grow in the x direction, and it starts in the middle because, the transform-origin property is set to center, so we can change it accordingly
            transition: transform .2s,
                        width .4s cubic-bezier(1,0,0,1) .2s, // this is the syntax for the shorthand transition property ***transition-property: ; transition-duration: ; transition-timing-function: ; transition-delay: ;****
                        background-color .1s;
                    }

        &:hover::before,
        &--active::before {
            transform: scaleY(1);
            width: 100%;
        }

        &:active::before {
            background-color: var(--color-primary-light);
        }
    }


    &__link {
        &:link,
        &:visited {
            color: var(--color-grey-light-2);
            text-decoration: none;
            text-transform: uppercase;
            display: block;
            padding: 1.5rem 3rem;
            position: relative; //unless and until we have a position specified the z-index doesnt work
            z-index: 10;

            display: flex;
            align-items: center;

            @media only screen and (max-width: $bp-medium) {
                justify-content: center;
                padding: 2rem;
            }

            @media only screen and (max-width: $bp-small) {
                flex-direction: column;
                padding: 1.5rem .5rem;
            }
        }
    }

    &__icon {
        width: 1.75rem;
        height: 1.75rem; //usually we size the svg icons as squares
        margin-right: 2rem;
        fill: currentColor; //currentColor property uses the current color of the parent element

        @media only screen and (max-width: $bp-small) {
            margin-right: 0;
            margin-bottom: .7rem;
            width: 1.5rem;
            height: 1.5rem;
        }
    }

}

/////////////////////////////////////////
// LEGAL TEXT

.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: none;
    }
}


/////////////////////////////////////////
// GALLERY 

.gallery {
    display: flex;

    &__photo {
        width: 100%;
        display: block; //we are displaying the imageaa as a block because thats to avoid the small space happening underneath the image which happens when we leave it as an inline element
    }

}


/////////////////////////////////////////
// HOTEL OVERVIEW

.overview {
    display: flex;
    align-items: center;
    // justify-content: space-between; 

    border-bottom: 1px solid var(--color-grey-light-2);

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: .1rem;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }
    }

    &__stars {
        // flex: 1; when we use this the element covers the entire space available to it so using this is not convinient        
        margin-right: auto; //we use this because we want the element to only be the size of its content
        display: flex; //we could have also used line height - 0 and font size - 0 to center the stars in their parent container
        // align-items: center;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: white;
        margin-left: 3rem;
        padding: 0 2.25rem;

        align-self: stretch;

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        @media only screen and (max-width: $bp-small) {
            padding: 0 1.5rem;
        }
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width: $bp-small) {
            font-size: .5rem;
        }
    }
}


/////////////////////////////////////////
// BUTTON INLIINE

.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
            margin-left: .8rem;
        }
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;  //the infinite keyword make the animation to happen infinite times as long as the button is focused 
    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

/////////////////////////////////////////
// PARAGRAPH

.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}

/////////////////////////////////////////
// LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap;


    &__item {
        flex: 0 0 50%;
        margin-bottom: .7rem;
    }

    &__item::before {
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;
        
        //older browsers;
        // background-image: url(../images/chevron-thin-right.svg);
        // background-size: cover;

        //newer browsers -  we use masks //we used mask here because with background image we cannot change the color of the image in css so we use the mask property
        background-color: var(--color-primary);
        -webkit-mask-image: url(../images/chevron-thin-right.svg);
        -webkit-mask-size: cover;

    }
}

/////////////////////////////////////////
// RECOMMEND

.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    // justify-content: space-between;
    align-items: center;

    &__count {
        margin-right: auto; //we can use the justify content property too instead of this
    }

    &__friends {
        display: flex;
    }

    &__photo {
        box-sizing: content-box; //this is the default setting
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid white;

        &:not(:last-child) {
            margin-right: -2rem;
        }
    }
}

/////////////////////////////////////////
// REVIEWS

.review {
    background-color: white;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;

    position: relative;
    overflow: hidden;

    // display: flex;
    // flex-direction: column;

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative; //since the z index never works without the position we need to specify it always
    }

    &__user {
        display: flex;
        align-items: center;

        &-box {
            margin-right: auto;
        }

        &-name {
            font-size: 1.1rem;
            font-weight: 600;
            text-transform: uppercase;
            margin-bottom: .4rem;
        }

        &-date {
            font-size: 1rem;
            color: var(--color-grey-dark-3);
        }

    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__rating {
        color: var(--color-primary);
        font-size: 2.2rem;
        font-weight: 300;
    }

    &::before {
        content: "\201C";
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        z-index: 1;
    }

}

/////////////////////////////////////////
// CALL TO ACTION

.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0;
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}


/////////////////////////////////////////
// CALL TO ACTION BUTTON

.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: white;
    position: relative;
    overflow: hidden; //we set this to make the invisible button disappear
    // transition: background-image 2s; transition doesnt work on background images

    cursor: pointer;

    & > * { //all direct children selector
        display: inline-block;
        height: 100%;
        width: 100%;
        transition: all .2s;
    }

    &__visible {
        padding: 2rem 7.5rem;
    }

    &__invisible {
        display: inline-block;
        position: absolute;
        padding: 2rem 0; //we didnt put the exact same padding as the visible element, because with that padding we werent getting enough space for the text
        left: 0;
        top: -100%; //we set it at -100% because its going to move up exactly the size of the element, so basically if this element is X pixels high, it will move up 100% of that
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }

    &:hover &__visible {
        transform: translateY(100%); //this makes it to translate 100% of its height down
    }

    &:hover &__invisible {
        top: 0;
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}



